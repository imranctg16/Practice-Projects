### NestJS Boilerplate API Test Requests
### Use this file with VS Code REST Client extension

### Variables
@baseUrl = http://localhost:3000
@token = YOUR_JWT_TOKEN_HERE

### 1. Create a new user
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "name": "John Doe",
  "password": "password123"
}

### 2. Create another user
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "jane.smith@example.com",
  "name": "Jane Smith", 
  "password": "password123"
}

### 3. Login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "password123"
}

### 4. Get all users (requires authentication)
GET {{baseUrl}}/users
Authorization: Bearer {{token}}

### 5. Create a post
POST {{baseUrl}}/posts
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "title": "My First NestJS Post",
  "content": "This is my first post created using the NestJS boilerplate. It demonstrates the power of TypeScript and modern backend architecture!",
  "published": true
}

### 6. Create another post (draft)
POST {{baseUrl}}/posts
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "title": "Draft Post",
  "content": "This is a draft post that is not published yet.",
  "published": false
}

### 7. Get all posts (public)
GET {{baseUrl}}/posts

### 8. Get published posts only
GET {{baseUrl}}/posts?published=true

### 9. Get posts by user ID
GET {{baseUrl}}/posts?userId=1

### 10. Get single post
GET {{baseUrl}}/posts/1

### 11. Update a post
PATCH {{baseUrl}}/posts/1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "title": "Updated Post Title",
  "content": "This content has been updated!"
}

### 12. Publish a post
PATCH {{baseUrl}}/posts/2/publish
Authorization: Bearer {{token}}

### 13. Unpublish a post
PATCH {{baseUrl}}/posts/2/unpublish
Authorization: Bearer {{token}}

### 14. Delete a post
DELETE {{baseUrl}}/posts/2
Authorization: Bearer {{token}}

### 15. Update user profile
PATCH {{baseUrl}}/users/1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "name": "John Doe Updated"
}